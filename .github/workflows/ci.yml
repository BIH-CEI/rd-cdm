# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*'            # publish on tag e.g. v2.0.1
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 1' # weekly (Mon 02:00 UTC)

jobs:
  tests:
    name: Tests (pytest)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ['3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'

      - name: Install Poetry
        run: python -m pip install --upgrade pip poetry

      - name: Configure Poetry to create venv in project
        run: poetry config virtualenvs.in-project true

      - name: Install dependencies (Poetry)
        run: poetry install --no-interaction --no-root

      - name: Install package
        run: poetry install --no-interaction

      - name: Run pytest
        env:
          PYTHONPATH: src
        run: |
          poetry run pytest -q

  merge_and_validate:
    name: Merge & Validate
    runs-on: ubuntu-latest
    needs: [tests]
    env:
      PYTHONPATH: src
      BIOPORTAL_API_KEY: ${{ secrets.BIOPORTAL_API_KEY }}  # expose once at job level
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install Poetry
        run: python -m pip install --upgrade pip poetry

      - name: Install dependencies (Poetry)
        run: poetry install --no-interaction --no-root

      - name: Merge instance files -> rd_cdm_vX_Y_Z.yaml
        run: |
          # Uses your version resolver; omit --version to auto-pick
          poetry run python src/rd_cdm/utils/parsing.py
          # Remember the merged file path for later steps
          echo "MERGED_FILE=$(ls src/rd_cdm/instances/*/rd_cdm_v*.yaml | head -n1)" >> $GITHUB_ENV

      - name: LinkML validate schema & merged instances
        run: |
          echo "Validating $MERGED_FILE"
          poetry run linkml validate --schema src/rd_cdm/schema/rd_cdm.yaml "$MERGED_FILE"

      - name: RD-CDM validation against BioPortal (optional)
        if: env.BIOPORTAL_API_KEY != ''
        run: |
          poetry run python src/rd_cdm/utils/validation.py


  build:
    name: Build (sdist/wheel)
    runs-on: ubuntu-latest
    needs: [tests, merge_and_validate]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install build backend
        run: python -m pip install --upgrade pip build

      - name: Build distributions
        run: python -m build

      - name: Store artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/v')   # only on tags like v2.0.1
    permissions:
      id-token: write          # REQUIRED for PyPI trusted publishing (OIDC)
      contents: read
    environment: pypi          # optional, for environment protection rules
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Publish to PyPI via OIDC (trusted publishing)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          # no username/password needed; OIDC handles auth
          # repository-url: https://upload.pypi.org/legacy/  # default
          verbose: true
